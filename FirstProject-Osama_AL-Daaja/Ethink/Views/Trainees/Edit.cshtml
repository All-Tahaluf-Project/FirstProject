@model Ethink.Models.ApplicationUser

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Private_Layout.cshtml";
}

@*<h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>ApplicationUser</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ImageName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Block, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Block)
                        @Html.ValidationMessageFor(model => model.Block, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NickName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Gender)
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@





















































<link rel="stylesheet" type="text/css" href="~/Content/EditForm/vendor/animate/animate.css">
<link rel="stylesheet" type="text/css" href="~/Content/EditForm/vendor/css-hamburgers/hamburgers.min.css">
<link rel="stylesheet" type="text/css" href="~/Content/EditForm/vendor/animsition/css/animsition.min.css">
<link rel="stylesheet" type="text/css" href="~/Content/EditForm/vendor/select2/select2.min.css">
<link rel="stylesheet" type="text/css" href="~/Content/EditForm/vendor/daterangepicker/daterangepicker.css">
<link rel="stylesheet" type="text/css" href="~/Content/EditForm/css/util.css">
<link rel="stylesheet" type="text/css" href="~/Content/EditForm/css/main.css">









@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="limiter">
        <div class="container-login100">
            <div class="wrap-login100">
                <div class="login100-form-title" style="background-image: url(/Content/EditForm/images/bg-01.jpg);">
                    <span class="login100-form-title-1">
                        Edit Trainer
                    </span>
                </div>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <form class="login100-form validate-form">
                    <div class="wrap-input100 validate-input m-b-26">
                        <span class="label-input100">Username</span>
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "UserName" } })
                        <span class="focus-input100"></span>
                    </div>

                    <div class="wrap-input100 validate-input m-b-18">
                        <span class="label-input100">Email</span>
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @type = "email", @class = "form-control", placeholder = "E-Email Address" } })
                        <span class="focus-input100"></span>
                    </div>


                    <div class="wrap-input100 validate-input m-b-18">
                        <span class="label-input100">Phone Number</span>
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @type = "number", @class = "form-control", placeholder = "Phone Number" } })
                        <span class="focus-input100"></span>
                    </div>


                    <div class="wrap-input100 validate-input m-b-18">
                        <span class="label-input100">NickName</span>
                        @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control", placeholder = "NickName" } })
                        <span class="focus-input100"></span>
                    </div>


                    <div class="wrap-input100 validate-input m-b-18">
                        <span class="label-input100">Gender</span>
                        <div class="row">
                            <div class="col-md-12" style="text-align:center;    font-size: 2pc;">
                                <div class="row">
                                    <div class="col-md-6" style="text-align:center;    font-size: 2pc;">
                                        @Html.RadioButtonFor(m => m.Gender, false)<i class="fas fa-female"></i>
                                    </div>
                                    <div class="col-md-6" style="text-align:center;    font-size: 2pc;">
                                        @Html.RadioButtonFor(m => m.Gender, true)<i class="fas fa-male"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <span class="focus-input100"></span>
                    </div>

                    <div class="flex-sb-m w-full p-b-30">
                        <div class="contact100-form-checkbox">
                            <label class="label-checkbox100" for="ckb1">
                                @ViewBag.Status
                            </label>
                        </div>
                    </div>

                    <div class="container-login100-form-btn">
                        <button type="submit" class="login100-form-btn">
                            Edit
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}





<script src="~/Content/EditForm/vendor/animsition/js/animsition.min.js"></script>
<script src="~/Content/EditForm/vendor/bootstrap/js/popper.js"></script>
<script src="~/Content/EditForm/vendor/bootstrap/js/bootstrap.min.js"></script>
<script src="~/Content/EditForm/vendor/select2/select2.min.js"></script>
<script src="~/Content/EditForm/vendor/daterangepicker/moment.min.js"></script>
<script src="~/Content/EditForm/vendor/daterangepicker/daterangepicker.js"></script>
<script src="~/Content/EditForm/vendor/countdowntime/countdowntime.js"></script>





